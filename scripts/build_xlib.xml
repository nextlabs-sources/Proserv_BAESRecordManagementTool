<!-- build_xlib.xml Description: This ANT script constructs <project root>/xlib. 	To use this script, you must update properties is <project root>/scripts/build.properties 	or overide them from commandline (using -D option). For example: set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH% 	ant -XX:MaxPermSize=512m -Dnlbuildroot=C:/depot/PolicyStudio/dev/BuildScript_1205 	-Dexternal.dir=c:/depot/external -Dnlexternaldir=c:/depot/external -f scripts/build_xlib.xml 	or set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH% set 	ANT_OPTS=-XX:MaxPermSize=512m -Dnlbuildroot=%NLBUILDROOT% -Dexternal.dir=%NLEXTERNALDIR% 	-Dnlexternaldir=%NLEXTERNALDIR% ant -f scripts/build_xlib.xml -v --><project name="build_xlib" default="all" basedir=".">	<!-- Debug <echoproperties /> <fail message="INFO: Debug" /> -->	<!-- Property files -->	<property file="${basedir}/build.properties" />	<!-- Global properties -->	<property name="xlib_dir" location="${nlbuildroot}/xlib" />	<property name="xlib_jar_dir" value="${xlib_dir}/jar" />	<property name="xlib_exe_dir" value="${xlib_dir}/exe" />	<property name="xlib_exe_32bit_dir" value="${xlib_exe_dir}/x86" />	<property name="xlib_exe_64bit_dir" value="${xlib_exe_dir}/x64" />	<property name="xlib_dll_dir" value="${xlib_dir}/dll" />	<property name="xlib_dll_32bit_dir" value="${xlib_dll_dir}/x86" />	<property name="xlib_dll_64bit_dir" value="${xlib_dll_dir}/x64" />	<!-- TBD: psexternaldir is a temporary variable. It will be removed with 		all files under lib are extracted automatically from build artifacts. -->	<property name="psexternaldir" location="${nlbuildroot}/lib" />	<!-- Dump properties -->	<echoproperties />	<echo message="INFO: Dump properties completed" />	<!-- Sanity checks -->	<fail message="nlbuildroot is not set" unless="nlbuildroot" />	<fail message="nlbuildroot is empty">		<condition>			<equals arg1="${nlbuildroot}" arg2="" trim="true" />		</condition>	</fail>	<available file="${nlbuildroot}" type="dir" property="local.nlbuildroot_exists" />	<fail message="nlbuildroot directory does not exist - ${nlbuildroot}" unless="local.nlbuildroot_exists" />	<fail message="nlexternaldir is not set" unless="nlexternaldir" />	<fail message="nlexternaldir is empty">		<condition>			<equals arg1="${nlexternaldir}" arg2="" trim="true" />		</condition>	</fail>	<available file="${nlexternaldir}" type="dir" property="local.nlexternaldir_exists" />	<fail message="nlexternaldir directory does not exist - ${nlexternaldir}" unless="local.nlexternaldir_exists" />	<echo message="INFO: Sanity check completed (no error)" />	<!-- Targets -->	<target name="all" depends="clean, prepare_external_jar, prepare_tomcat" />	<target name="prepare_external_jar">		<mkdir dir="${xlib_jar_dir}" />		<copy file="${nlexternaldir}/jsf/mojarra-2.1.6-FCS/lib/javax.faces.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />		<copy file="${nlexternaldir}/slf4j/slf4j-1.7.7/slf4j-api-1.7.7.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />		<copy file="${nlexternaldir}/slf4j/slf4j-1.7.7/slf4j-log4j12-1.7.7.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />		<copy file="${nlexternaldir}/log4j/apache-log4j-1.2.17/log4j-1.2.17.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />		<copy file="${nlexternaldir}/log4jdbc/log4jdbc-1.2/build/log4jdbc4-1.2.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />		<copy file="${nlexternaldir}/commons-logging/commons-logging-1.1.1/commons-logging-1.1.1.jar" tofile="${xlib_jar_dir}/commons-logging.jar" preservelastmodified="true" overwrite="false" verbose="true" />		<copy file="${nlexternaldir}/commons-io/commons-io-2.4/commons-io-2.4.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />		<copy file="${nlexternaldir}/common-fileupload/commons-fileupload-1.3.1/lib/commons-fileupload-1.3.1.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />		<copy file="${nlexternaldir}/gson/gson-2.3.1/gson-2.3.1.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />		<copy file="${nlexternaldir}/iText/itext-5.5.3/itextpdf-5.5.3.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />		<copy file="${nlexternaldir}/ojdbc/ojdbc6/ojdbc6.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />		<copy file="${nlexternaldir}/primefaces/themes/delta-1.0.10.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />		<copy file="${nlexternaldir}/primefaces/primefaces-5.1.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />		<copy file="${nlexternaldir}/jsoup/jsoup-1.8.2.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />		<copy file="${nlmainexternaldir}/tomcat/apache-tomcat-7.0.57/lib/tomcat-jdbc.jar" todir="${xlib_jar_dir}" preservelastmodified="true" overwrite="false" verbose="true" />	</target>		<target name="prepare_tomcat">			<copy todir="${nlbuildroot}/setup/RecordManagementTool/server/apache-tomcat-7.0.57" verbose="true">			  <fileset dir="${nlmainexternaldir}/tomcat/apache-tomcat-7.0.57-windows-x64">			  	<exclude name="webapps/examples/**" />			  	<exclude name="webapps/docs/**" />			  </fileset>			</copy>			<copy file ="${nlbuildroot}/scripts/server.xml" 				todir="${nlbuildroot}/setup/RecordManagementTool/server/apache-tomcat-7.0.57/conf" 				overwrite="true" verbose="true"/>			<copy file ="${nlbuildroot}/scripts/service_install.bat" 						todir="${nlbuildroot}/setup/RecordManagementTool/server/apache-tomcat-7.0.57/bin/" 						overwrite="true" verbose="true"/>			<copy file ="${nlbuildroot}/scripts/service_remove.bat" 						todir="${nlbuildroot}/setup/RecordManagementTool/server/apache-tomcat-7.0.57/bin/" 						overwrite="true" verbose="true"/>			<mkdir dir="${nlbuildroot}/setup/RecordManagementTool/server/apache-tomcat-7.0.57/conf/Catalina/localhost" />			<copy file ="${nlbuildroot}/conf/RecordManagementTool.xml" 						todir="${nlbuildroot}/setup/RecordManagementTool/server/apache-tomcat-7.0.57/conf/Catalina/localhost/" 						overwrite="true" verbose="true"/>	</target>	<target name="clean">		<delete dir="${xlib_dir}" />	</target></project>